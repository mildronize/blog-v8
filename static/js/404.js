(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&t(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();function l(o){const i=new URL(o).pathname.replace(/\/$/,""),t=i.split("-");if(t.length>1)return t[t.length-1]===""?null:t[t.length-1];{const e=i.split("/");return e.length>1?e[e.length-1]===""?null:e[e.length-1]:null}}(async()=>{if(typeof window>"u")return;const o=window.location.href;console.log(`Current URL: ${o}`);const n=l(o);if(n===null){console.log("No ID found in the URL");return}console.log(`Extracted ID: ${n}`);const t=(await(await fetch("/api/id-mapper.json")).json())[n];t&&window.location.assign(t.path)})();
